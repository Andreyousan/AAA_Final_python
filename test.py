from pizza import *
from cli import *


def test_pizza_base():
    pizza = PizzaBase()
    assumed_dict_keys = ['—Ç–æ–º–∞—Ç–Ω—ã–π —Å–æ—É—Å', '–º–æ—Ü–∞—Ä–µ–ª–ª–∞']
    assert list(pizza.dict().keys()) == assumed_dict_keys


def test_pepperoni():
    pizza = Pepperoni()
    assumed_dict_keys = ['—Ç–æ–º–∞—Ç–Ω—ã–π —Å–æ—É—Å', '–º–æ—Ü–∞—Ä–µ–ª–ª–∞', '–ø–µ–ø–ø–µ—Ä–æ–Ω–∏']
    assert list(pizza.dict().keys()) == assumed_dict_keys


def test_margherita():
    pizza = Margherita()
    assumed_dict_keys = ['—Ç–æ–º–∞—Ç–Ω—ã–π —Å–æ—É—Å', '–º–æ—Ü–∞—Ä–µ–ª–ª–∞', '–ø–æ–º–∏–¥–æ—Ä—ã']
    assert list(pizza.dict().keys()) == assumed_dict_keys


def test_hawaiian():
    pizza = Hawaiian()
    assumed_dict_keys = ['—Ç–æ–º–∞—Ç–Ω—ã–π —Å–æ—É—Å', '–º–æ—Ü–∞—Ä–µ–ª–ª–∞', '–∫—É—Ä–∏—Ü–∞', '–∞–Ω–∞–Ω–∞—Å—ã']
    assert list(pizza.dict().keys()) == assumed_dict_keys


def test_inequality():
    assert not Pepperoni() == Hawaiian()


def test_equality():
    assert Margherita() == Margherita()


def test_fancy_print(capsys):
    PizzaBase().fancy_print()
    out, err = capsys.readouterr()
    assert '–û—Å–Ω–æ–≤–∞: —Ç–æ–º–∞—Ç–Ω—ã–π —Å–æ—É—Åü•´' in out


def test_bake(capsys):
    bake(Pepperoni())
    out, err = capsys.readouterr()
    assert 'üî•–ü—Ä–∏–≥–æ—Ç–æ–≤–∏–ª–∏ –∑–∞ ' in out


def test_deliver(capsys):
    deliver(Pepperoni())
    out, err = capsys.readouterr()
    assert 'üõµ–î–æ—Å—Ç–∞–≤–∏–ª–∏ –∑–∞ ' in out


def test_pickup(capsys):
    pickup(Pepperoni())
    out, err = capsys.readouterr()
    assert 'üëú' in out


def test_order(capsys): 
    order_base('pepperoni', False, False)
    out, err = capsys.readouterr()
    assert 'üçï–ó–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç. –ü–µ–ø–ø–µ—Ä–æ–Ω–∏ —Ä–∞–∑–º–µ—Ä–∞ L.üçï\n' in out


def test_order_not_delivery(capsys):
    order_base('pepperoni', False, False)
    out, err = capsys.readouterr()
    assert not ('–î–æ—Å—Ç–∞–≤–∏–ª–∏' in out)


def test_order_delivery(capsys):
    order_base('pepperoni', True, False)
    out, err = capsys.readouterr()
    assert ('–î–æ—Å—Ç–∞–≤–∏–ª–∏' in out)


def test_order_pickup(capsys):
    order_base('pepperoni', False, True)
    out, err = capsys.readouterr()
    assert ('üëú–ó–∞–±—Ä–∞–ª–∏' in out)


def test_order_bigger(capsys):
    order_base('pepperoni', True, True)
    out, err = capsys.readouterr()
    assert '–ü–µ–ø–ø–µ—Ä–æ–Ω–∏ —Ä–∞–∑–º–µ—Ä–∞ XL' in out


def test_order_noname(capsys):
    order_base('chicken runch', True, True)
    out, err = capsys.readouterr()
    assert '–£ –Ω–∞—Å –Ω–µ—Ç —Ç–∞–∫–æ–π –ø–∏—Ü—Ü—ã' in out


def test_menu(capsys):
    menu_base()
    out, err = capsys.readouterr()
    occurances = [string in out for string in ['–ú–∞—Ä–≥–∞—Ä–∏—Ç–∞', '–ü–µ–ø–ø–µ—Ä–æ–Ω–∏', '–ì–∞–≤–∞–π—Å–∫–∞—è']]
    assert all(occurances)
